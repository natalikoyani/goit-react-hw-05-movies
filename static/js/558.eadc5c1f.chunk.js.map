{"version":3,"file":"static/js/558.eadc5c1f.chunk.js","mappings":"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","sources":["api.js","pages/MovieDetailsPage.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '16d168f707f6ea30309ca4c94be54a91';\n\nexport const fetchTrending = async () => {\n    try {\n        const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        console.error(error.message);\n    }\n}\n\nexport const fetchMovieById = async (id) => {\n    try {\n        const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n        return response.data;\n    } catch (error) {\n        console.error(error.message);\n    }\n}\n\nexport const fetchCast = async (id) => {\n    try {\n        const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n        return response.data.cast;\n    } catch (error) {\n        console.error(error.message);\n    }\n}\n\nexport const fetchReviews = async (id) => {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        console.error(error.message);\n    }\n}\n\nexport const fetchMovies = async (query) => {\n    try {\n        const response = await axios.get(`/search/movie?query=${query}&api_key=${API_KEY}`);\n        console.log(response.data.results);\n        return response.data.results;\n    } catch (error) {\n        console.error(error.message);\n    }\n}","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport { fetchMovieById } from 'api';\nimport { nanoid } from 'nanoid';\n\nexport default function MovieDetails() {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState({});\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? '/';\n\n    useEffect(() => {\n        if (!movieId) return;\n\n        const fetchData = async () => {\n            try {\n                const data = await fetchMovieById(movieId);\n                setMovie(data);\n            } catch (error) {\n                console.error(error.message);\n            }\n        }\n\n        fetchData();\n    }, [movieId]);\n\n    const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n    const releaseYear = movie.release_date ? `(${movie.release_date.substring(0, 4)})` : \"\";\n    const genres = () => {\n        return movie.genres\n            ? movie.genres.map(genre => (<li key={nanoid()}>{genre.name}</li>))\n            : 'No genres';\n    }\n    const rating = movie.vote_average ? movie.vote_average.toFixed(1) : 'no rating';\n\n    return (\n        <main>\n            <Link to={backLinkHref}>Back</Link>\n            <div>\n                <img src={\n                    movie.poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                        : defaultImg\n                }\n                    width={250}\n                    alt=\"poster\"\n                />\n                <h2>{movie.title} {releaseYear}</h2>\n                <p>Rating: {rating}</p>\n                <h3>Overview</h3>\n                <p>{movie.overview}</p>\n                <h3>Genres</h3>\n                <p>{genres()}</p>\n            </div >\n\n            <div>\n                <p>Additional information</p>\n                <ul>\n                    <li><Link to=\"cast\">Cast</Link></li>\n                    <li><Link to=\"reviews\">Reviews</Link></li>\n                </ul>\n\n                <Suspense fallback={<div>Loading subpage...</div>}>\n                    <Outlet />\n                </Suspense>\n            </div>\n        </main>\n    )\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["axios","API_KEY","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","t0","console","error","message","stop","apply","arguments","fetchMovieById","_ref2","_callee2","id","_context2","_x","fetchCast","_ref3","_callee3","_context3","cast","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","fetchMovies","_ref5","_callee5","query","_context5","log","_x4","MovieDetails","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","fetchData","releaseYear","release_date","substring","rating","vote_average","toFixed","_jsxs","children","_jsx","Link","to","src","poster_path","width","alt","title","overview","genres","map","genre","name","size","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","Suspense","fallback","Outlet"],"sourceRoot":""}