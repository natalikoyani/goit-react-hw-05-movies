{"version":3,"file":"static/js/219.c3954600.chunk.js","mappings":"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","sources":["api.js","components/MoviesList.js","components/SearchForm.styled.js","components/SearchForm.js","pages/MoviesPage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '16d168f707f6ea30309ca4c94be54a91';\n\nexport const fetchTrending = async () => {\n    try {\n        const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        console.error(error.message);\n    }\n}\n\nexport const fetchMovieById = async (id) => {\n    try {\n        const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n        return response.data;\n    } catch (error) {\n        console.error(error.message);\n    }\n}\n\nexport const fetchCast = async (id) => {\n    try {\n        const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n        return response.data.cast;\n    } catch (error) {\n        console.error(error.message);\n    }\n}\n\nexport const fetchReviews = async (id) => {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        console.error(error.message);\n    }\n}\n\nexport const fetchMovies = async (query) => {\n    try {\n        const response = await axios.get(`/search/movie?query=${query}&api_key=${API_KEY}`);\n        console.log(response.data.results);\n        return response.data.results;\n    } catch (error) {\n        console.error(error.message);\n    }\n}","import { Link, useLocation } from \"react-router-dom\";\n\nexport const MoviesList = ({ movies, basePath }) => {\n    const location = useLocation();\n    return (\n        <ul>\n            {movies.map(movie => (\n                <li key={movie.id}>\n                    <Link to={`${basePath}${movie.id}`} state={{ from: location }}>{movie.title}</Link>\n                </li>\n            ))}\n        </ul>\n    );\n};","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  border: 1px solid #ccc;\n  border-radius: 2px;\n  width: 45vh;\n\n  &:focus {\n    outline: none;\n    box-shadow: 0px 0px 5px 0px blue;\n  }\n`;\n\nexport const Button = styled.button`\n  border: 1px solid #ccc;\n  border-radius: 2px;\n  cursor: pointer;\n  font-size: 12px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 2px\n`;","import { Input, Button, Form } from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit, value }) => {\n    return (\n        <div>\n            <Form onSubmit={onSubmit}>\n                <Input type=\"text\" name=\"input\" defaultValue={value} required></Input>\n                <Button type=\"submit\">Search</Button>\n            </Form>\n        </div>\n    )\n}","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { MoviesList } from \"components/MoviesList\";\nimport { SearchForm } from \"components/SearchForm\";\nimport { fetchMovies } from 'api';\nimport { Container } from '../components/Layout.styled';\n\nexport default function MoviesPage() {\n    const [movies, setMovies] = useState([]);\n    const [params, setParams] = useSearchParams();\n    const query = params.get('query') ?? '';\n\n    useEffect(() => {\n        if (query === '') return;\n\n        const fetchData = async () => {\n            try {\n                const data = await fetchMovies(query);\n                setMovies(data);\n            } catch (error) {\n                console.error(error.message)\n            }\n        }\n\n        fetchData();\n    }, [query])\n\n    const onSubmit = evt => {\n        evt.preventDefault();\n        const form = evt.currentTarget;\n        setParams({ query: form.elements.input.value });\n    };\n\n    return (\n        <Container>\n            <SearchForm onSubmit={onSubmit} value={query} />\n            <MoviesList movies={movies} basePath='' />\n        </Container>\n    )\n}"],"names":["axios","API_KEY","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","t0","console","error","message","stop","apply","arguments","fetchMovieById","_ref2","_callee2","id","_context2","_x","fetchCast","_ref3","_callee3","_context3","cast","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","fetchMovies","_ref5","_callee5","query","_context5","log","_x4","MoviesList","movies","basePath","location","useLocation","_jsx","children","map","movie","Link","to","state","from","title","Input","styled","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","Form","_templateObject3","SearchForm","onSubmit","value","_jsxs","type","name","defaultValue","required","MoviesPage","_params$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","get","useEffect","fetchData","Container","evt","preventDefault","form","currentTarget","elements","input"],"sourceRoot":""}